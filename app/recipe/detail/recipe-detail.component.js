"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var core_2 = require("../../core");
var data_1 = require("../../data");
var RecipeDetailComponent = (function () {
    function RecipeDetailComponent(core, DA, DL) {
        this.core = core;
        this.DA = DA;
        this.DL = DL;
        this.isEditing = false;
        this.canDownload = false;
        if (this.DL.Recipe == null)
            this.DL.Recipe = new data_1.RecipeInfo(DL.NO_IMAGE_URL);
        else
            this.canDownload = true;
        if (!this.DL.Recipe.ImageURL)
            this.DL.Recipe.ImageURL = DL.NO_IMAGE_URL;
        this.imageURL = this.DL.Recipe.ImageURL;
    }
    RecipeDetailComponent.prototype.StartEdit = function (args) {
        this.editingTextView = args.object;
        this.isEditing = true;
    };
    RecipeDetailComponent.prototype.DownloadRecipe = function () {
        var path = this.DL.GetPath(this.DL.Recipe.Name + '.png');
        this.DL.DownloadImage(path, this.DL.Recipe.ImageURL);
    };
    RecipeDetailComponent.prototype.StopEdit = function () {
        this.isEditing = false;
        this.editingTextView.dismissSoftInput();
    };
    RecipeDetailComponent.prototype.SelectImage = function () {
        this.DL.SelectImage(this.DL.Recipe.Name);
    };
    RecipeDetailComponent.prototype.LoadComponent = function (selector) {
        this.core.LoadComponent(selector);
    };
    RecipeDetailComponent.prototype.Save = function () {
        this.DA.RecipeSave();
        this.loadList();
    };
    RecipeDetailComponent.prototype.Cancel = function () {
        this.loadList();
    };
    RecipeDetailComponent.prototype.loadList = function () {
        this.DL.LoadComponent("recipe-list");
    };
    RecipeDetailComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.DL.TITLE = "Recipe Details";
        this.DA.ImageUploaded.subscribe(function (url) {
            if (_this.DL.TITLE == "Recipe Details") {
                _this.imageURL = url;
                _this.DL.Recipe.ImageURL = url;
                _this.DL.IsUploading = false;
            }
        });
        this.DL.ImageSelected.subscribe(function (source) {
            if (_this.DL.TITLE == "Recipe Details") {
                _this.DL.IsUploading = true;
                _this.DA.UploadImage(source, 'images/recipes/' + _this.DL.Recipe.Name + '.png');
            }
        });
        this.DL.ImageDownloaded.subscribe(function (path) {
            if (_this.DL.TITLE == "Recipe Details") {
                _this.DL.Recipe.ImageURL = path;
                _this.DA.RecipeLocalSave();
                _this.DL.LoadComponent("recipe-local-list");
            }
        });
    };
    RecipeDetailComponent = __decorate([
        core_1.Component({
            moduleId: module.id,
            selector: 'recipe-detail',
            templateUrl: './recipe-detail.component.html',
            styleUrls: ['./recipe-detail.component.scss']
        }),
        __metadata("design:paramtypes", [core_2.Core, data_1.DataAccess, data_1.DataLayer])
    ], RecipeDetailComponent);
    return RecipeDetailComponent;
}());
exports.RecipeDetailComponent = RecipeDetailComponent;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVjaXBlLWRldGFpbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJyZWNpcGUtZGV0YWlsLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHNDQUFrRDtBQUVsRCxtQ0FBa0M7QUFDbEMsbUNBQStEO0FBUS9EO0lBTUUsK0JBQW1CLElBQVUsRUFBVSxFQUFjLEVBQVUsRUFBYTtRQUF6RCxTQUFJLEdBQUosSUFBSSxDQUFNO1FBQVUsT0FBRSxHQUFGLEVBQUUsQ0FBWTtRQUFVLE9BQUUsR0FBRixFQUFFLENBQVc7UUFKNUUsY0FBUyxHQUFZLEtBQUssQ0FBQztRQUMzQixnQkFBVyxHQUFZLEtBQUssQ0FBQztRQUkzQixFQUFFLENBQUEsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUM7WUFDeEIsSUFBSSxDQUFDLEVBQUUsQ0FBQyxNQUFNLEdBQUcsSUFBSSxpQkFBVSxDQUFDLEVBQUUsQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUNuRCxJQUFJO1lBQ0YsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUM7UUFFMUIsRUFBRSxDQUFBLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUM7WUFDMUIsSUFBSSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsUUFBUSxHQUFHLEVBQUUsQ0FBQyxZQUFZLENBQUM7UUFFNUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUM7SUFDMUMsQ0FBQztJQUVNLHlDQUFTLEdBQWhCLFVBQWlCLElBQUk7UUFDbkIsSUFBSSxDQUFDLGVBQWUsR0FBYSxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQzdDLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO0lBQ3hCLENBQUM7SUFFTSw4Q0FBYyxHQUFyQjtRQUNFLElBQUksSUFBSSxHQUFHLElBQUksQ0FB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LFFBQVEsRUFBRSxlQUFlO1lBQ3pCLFdBQVcsRUFBRSxnQ0FBZ0M7WUFDN0MsU0FBUyxFQUFFLENBQUMsZ0NBQWdDLENBQUM7U0FDOUMsQ0FBQzt5Q0FPeUIsV0FBSSxFQUFjLGlCQUFVLEVBQWMsZ0JBQVM7T0FOakUscUJBQXFCLENBK0VqQztJQUFELDRCQUFDO0NBQUEsQUEvRUQsSUErRUM7QUEvRVksc0RBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFRleHRWaWV3IH0gZnJvbSBcInVpL3RleHQtdmlld1wiO1xuaW1wb3J0IHsgQ29yZSB9IGZyb20gXCIuLi8uLi9jb3JlXCI7XG5pbXBvcnQgeyBEYXRhTGF5ZXIsIERhdGFBY2Nlc3MsIFJlY2lwZUluZm8gfSBmcm9tIFwiLi4vLi4vZGF0YVwiO1xuXG5AQ29tcG9uZW50KHtcbiAgbW9kdWxlSWQ6IG1vZHVsZS5pZCxcbiAgc2VsZWN0b3I6ICdyZWNpcGUtZGV0YWlsJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3JlY2lwZS1kZXRhaWwuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9yZWNpcGUtZGV0YWlsLmNvbXBvbmVudC5zY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgUmVjaXBlRGV0YWlsQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgaW1hZ2VVUkw6IHN0cmluZztcbiAgaXNFZGl0aW5nOiBib29sZWFuID0gZmFsc2U7XG4gIGNhbkRvd25sb2FkOiBib29sZWFuID0gZmFsc2U7XG4gIGVkaXRpbmdUZXh0VmlldzogVGV4dFZpZXc7XG5cbiAgY29uc3RydWN0b3IocHVibGljIGNvcmU6IENvcmUsIHByaXZhdGUgREE6IERhdGFBY2Nlc3MsIHByaXZhdGUgREw6IERhdGFMYXllcikge1xuICAgIGlmKHRoaXMuREwuUmVjaXBlID09IG51bGwpXG4gICAgICB0aGlzLkRMLlJlY2lwZSA9IG5ldyBSZWNpcGVJbmZvKERMLk5PX0lNQUdFX1VSTCk7XG4gICAgZWxzZVxuICAgICAgdGhpcy5jYW5Eb3dubG9hZCA9IHRydWU7XG5cbiAgICBpZighdGhpcy5ETC5SZWNpcGUuSW1hZ2VVUkwpXG4gICAgICB0aGlzLkRMLlJlY2lwZS5JbWFnZVVSTCA9IERMLk5PX0lNQUdFX1VSTDtcblxuICAgIHRoaXMuaW1hZ2VVUkwgPSB0aGlzLkRMLlJlY2lwZS5JbWFnZVVSTDtcbiAgfVxuXG4gIHB1YmxpYyBTdGFydEVkaXQoYXJncykge1xuICAgIHRoaXMuZWRpdGluZ1RleHRWaWV3ID0gPFRleHRWaWV3PmFyZ3Mub2JqZWN0O1xuICAgIHRoaXMuaXNFZGl0aW5nID0gdHJ1ZTtcbiAgfVxuXG4gIHB1YmxpYyBEb3dubG9hZFJlY2lwZSgpIHtcbiAgICBsZXQgcGF0aCA9IHRoaXMuREwuR2V0UGF0aCh0aGlzLkRMLlJlY2lwZS5OYW1lICsgJy5wbmcnKTtcbiAgICB0aGlzLkRMLkRvd25sb2FkSW1hZ2UocGF0aCwgdGhpcy5ETC5SZWNpcGUuSW1hZ2VVUkwpO1xuICB9XG5cbiAgcHVibGljIFN0b3BFZGl0KCkge1xuICAgIHRoaXMuaXNFZGl0aW5nID0gZmFsc2U7XG4gICAgdGhpcy5lZGl0aW5nVGV4dFZpZXcuZGlzbWlzc1NvZnRJbnB1dCgpO1xuICB9XG5cbiAgcHVibGljIFNlbGVjdEltYWdlKCkge1xuICAgIHRoaXMuREwuU2VsZWN0SW1hZ2UodGhpcy5ETC5SZWNpcGUuTmFtZSk7XG4gIH1cblxuICBwdWJsaWMgTG9hZENvbXBvbmVudChzZWxlY3Rvcjogc3RyaW5nKSB7XG4gICAgdGhpcy5jb3JlLkxvYWRDb21wb25lbnQoc2VsZWN0b3IpO1xuICB9XG5cbiAgcHVibGljIFNhdmUoKSB7XG4gICAgdGhpcy5EQS5SZWNpcGVTYXZlKCk7XG4gICAgdGhpcy5sb2FkTGlzdCgpO1xuICB9XG5cbiAgcHVibGljIENhbmNlbCgpIHtcbiAgICB0aGlzLmxvYWRMaXN0KCk7XG4gIH1cblxuICBwcml2YXRlIGxvYWRMaXN0KCkge1xuICAgIHRoaXMuREwuTG9hZENvbXBvbmVudChcInJlY2lwZS1saXN0XCIpO1xuICB9XG4gIFxuICBuZ09uSW5pdCgpIHsgXG4gICAgdGhpcy5ETC5USVRMRSA9IFwiUmVjaXBlIERldGFpbHNcIjtcbiAgICB0aGlzLkRBLkltYWdlVXBsb2FkZWQuc3Vic2NyaWJlKHVybCA9PiB7XG4gICAgICBpZih0aGlzLkRMLlRJVExFID09IFwiUmVjaXBlIERldGFpbHNcIikge1xuICAgICAgICB0aGlzLmltYWdlVVJMID0gdXJsO1xuICAgICAgICB0aGlzLkRMLlJlY2lwZS5JbWFnZVVSTCA9IHVybDtcbiAgICAgICAgdGhpcy5ETC5Jc1VwbG9hZGluZyA9IGZhbHNlO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgdGhpcy5ETC5JbWFnZVNlbGVjdGVkLnN1YnNjcmliZShzb3VyY2UgPT4ge1xuICAgICAgaWYodGhpcy5ETC5USVRMRSA9PSBcIlJlY2lwZSBEZXRhaWxzXCIpIHtcbiAgICAgICAgdGhpcy5ETC5Jc1VwbG9hZGluZyA9IHRydWU7XG4gICAgICAgIHRoaXMuREEuVXBsb2FkSW1hZ2Uoc291cmNlLCAnaW1hZ2VzL3JlY2lwZXMvJyArIHRoaXMuREwuUmVjaXBlLk5hbWUgKyAnLnBuZycpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgdGhpcy5ETC5JbWFnZURvd25sb2FkZWQuc3Vic2NyaWJlKHBhdGggPT4ge1xuICAgICAgaWYodGhpcy5ETC5USVRMRSA9PSBcIlJlY2lwZSBEZXRhaWxzXCIpIHtcbiAgICAgICAgdGhpcy5ETC5SZWNpcGUuSW1hZ2VVUkwgPSBwYXRoO1xuICAgICAgICB0aGlzLkRBLlJlY2lwZUxvY2FsU2F2ZSgpO1xuICAgICAgICB0aGlzLkRMLkxvYWRDb21wb25lbnQoXCJyZWNpcGUtbG9jYWwtbGlzdFwiKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxufVxuIl19